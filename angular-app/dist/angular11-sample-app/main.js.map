{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/auth-config.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/todo-view/todo-view.component.ts","./src/app/todo-view/todo-view.component.html","./src/app/consent/consent.component.ts","./src/app/consent/consent.component.html","./src/app/todo-edit/todo-edit.component.ts","./src/app/todo-edit/todo-edit.component.html","./src/app/app-routing.module.ts","./src/app/todo.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport { MsalBroadcastService, MsalService } from '@azure/msal-angular';\r\nimport { EventMessage, EventType, AuthenticationResult, InteractionStatus } from '@azure/msal-browser';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  loginDisplay = false;\r\n  displayedColumns: string[] = ['claim', 'value'];\r\n  dataSource: any =[];\r\n\r\n  private readonly _destroying$ = new Subject<void>();\r\n\r\n  constructor(private authService: MsalService, private msalBroadcastService: MsalBroadcastService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.msalBroadcastService.msalSubject$\r\n      .pipe(\r\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe((result: EventMessage) => {\r\n        if (result?.payload) {\r\n          const payload: AuthenticationResult = result.payload as AuthenticationResult\r\n          this.authService.instance.setActiveAccount(payload.account);\r\n        }\r\n      });\r\n\r\n      this.msalBroadcastService.inProgress$\r\n      .pipe(\r\n        filter((status: InteractionStatus) => status === InteractionStatus.None)\r\n      )\r\n      .subscribe(() => {\r\n        this.setLoginDisplay();\r\n        this.checkAndSetActiveAccount();\r\n        this.getClaims(this.authService.instance.getActiveAccount()?.idTokenClaims)\r\n      });\r\n  }\r\n\r\n  checkAndSetActiveAccount() {\r\n    /**\r\n     * If no active account set but there are accounts signed in, sets first account to active account\r\n     * To use active account set here, subscribe to inProgress$ first in your component\r\n     * Note: Basic usage demonstrated. Your app may require more complicated account selection logic\r\n     */\r\n    let activeAccount = this.authService.instance.getActiveAccount();\r\n\r\n    if (!activeAccount && this.authService.instance.getAllAccounts().length > 0) {\r\n      let accounts = this.authService.instance.getAllAccounts();\r\n      this.authService.instance.setActiveAccount(accounts[0]);\r\n    }\r\n  }\r\n\r\n  setLoginDisplay() {\r\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\r\n  }\r\n\r\n  getClaims(claims: any) {\r\n    this.dataSource = [\r\n      {id: 1, claim: \"Display Name\", value: claims ? claims['name'] : null},\r\n      {id: 2, claim: \"User Principal Name (UPN)\", value: claims ? claims['preferred_username'] : null},\r\n      {id: 3, claim: \"OID\", value: claims ? claims['oid']: null},\r\n      {id: 4, claim: \"SUB\", value: claims ? claims['sub']: null}\r\n    ];\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroying$.next(undefined);\r\n    this._destroying$.complete();\r\n  }\r\n}","<mat-card class=\"card-section\" *ngIf=\"!loginDisplay\">\r\n  <mat-card-title>Angular multi-tenant single-page application</mat-card-title>\r\n  <mat-card-content>This sample demonstrates how to serve a multi-tenant application that can sign-in users from any tenant </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-card-actions class=\"card-section\">\r\n  <button mat-raised-button *ngIf=\"loginDisplay\" [routerLink]=\"['todo-view']\">Get My Tasks</button>\r\n</mat-card-actions> -->\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" *ngIf=\"loginDisplay\">\r\n  <!-- Claim Column -->\r\n  <ng-container matColumnDef=\"claim\">\r\n    <th mat-header-cell *matHeaderCellDef> Claim </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.claim}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Value Column -->\r\n  <ng-container matColumnDef=\"value\">\r\n    <th mat-header-cell *matHeaderCellDef> Value </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/**\r\n * This file contains authentication parameters. Contents of this file\r\n * is roughly the same across other MSAL.js libraries. These parameters\r\n * are used to initialize Angular and MSAL Angular configurations in\r\n * in app.module.ts file.\r\n */\r\n\r\nimport { LogLevel, Configuration, BrowserCacheLocation } from '@azure/msal-browser';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf(\"MSIE \") > -1 || window.navigator.userAgent.indexOf(\"Trident/\") > -1;\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\r\nexport const msalConfig: Configuration = {\r\n    // API client id: e0fa75b3-4383-456c-9b66-581cac815f1f\r\n    // APP client id: b77cd122-9f25-4932-a1cb-1ed5772f4a37\r\n    auth: {\r\n        clientId: 'b77cd122-9f25-4932-a1cb-1ed5772f4a37', // This is the ONLY mandatory field that you need to supply.\r\n        authority: 'https://login.microsoftonline.com/organizations', // Defaults to \"https://login.microsoftonline.com/common\"\r\n        redirectUri: '/', // Points to window.location.origin. You must register this URI on Azure portal/App Registration.\r\n    },\r\n    cache: {\r\n        cacheLocation: BrowserCacheLocation.LocalStorage, // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\r\n        storeAuthStateInCookie: isIE, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\r\n        loggerOptions: {\r\n            loggerCallback(logLevel: LogLevel, message: string) {\r\n                console.log(message);\r\n            },\r\n            logLevel: LogLevel.Verbose,\r\n            piiLoggingEnabled: false\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Add here the endpoints and scopes when obtaining an access token for protected web APIs. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\r\nexport const protectedResources = {\r\n    graphApi: {\r\n        endpoint: \"https://graph.microsoft.com/v1.0/users\",\r\n        scopes: [\"User.Read.All\"]\r\n    },\r\n    todoListApi: {\r\n        endpoint: \"https://app-aad-node.azurewebsites.net/api\",\r\n        scopes: [\"api://e0fa75b3-4383-456c-9b66-581cac815f1f/.default\"],\r\n    },\r\n}\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n    scopes: [...protectedResources.todoListApi.scopes] // If you would like the admin-user to explicitly consent via \"Admin\" page, instead of being prompted for admin consent during initial login, remove this scope.\r\n};","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\r\nimport { MsalService, MsalBroadcastService, MSAL_GUARD_CONFIG, MsalGuardConfiguration } from '@azure/msal-angular';\r\nimport { EventMessage, EventType, InteractionType, PopupRequest, RedirectRequest } from '@azure/msal-browser';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { TodoService } from './todo.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'Azure Ad multitenant login';\r\n  isIframe = false;\r\n  loginDisplay = false;\r\n  isAuthorized = false;\r\n  private readonly _destroying$ = new Subject<void>();\r\n\r\n  constructor(\r\n    @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\r\n    private authService: MsalService,\r\n    private todoService: TodoService,\r\n    private msalBroadcastService: MsalBroadcastService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isIframe = window !== window.parent && !window.opener;\r\n\r\n    this.checkAccount();\r\n\r\n    /**\r\n     * You can subscribe to MSAL events as shown below. For more info,\r\n     * visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/events.md\r\n     */\r\n    this.msalBroadcastService.msalSubject$\r\n      .pipe(\r\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS || msg.eventType === EventType.ACQUIRE_TOKEN_SUCCESS),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe((result) => {\r\n        this.checkAccount();\r\n      });\r\n  }\r\n\r\n  checkAccount() {\r\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\r\n    this.todoService.getCurrentUser().subscribe((res) => {\r\n      this.isAuthorized = true;\r\n    }, (err) => {\r\n      this.isAuthorized = false;\r\n    })\r\n  }\r\n\r\n  login() {\r\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n      if (this.msalGuardConfig.authRequest){\r\n        this.authService.loginPopup({...this.msalGuardConfig.authRequest} as PopupRequest)\r\n          .subscribe(() => this.checkAccount());\r\n        } else {\r\n          this.authService.loginPopup()\r\n            .subscribe(() => this.checkAccount());\r\n      }\r\n    } else {\r\n      if (this.msalGuardConfig.authRequest){\r\n        this.authService.loginRedirect({...this.msalGuardConfig.authRequest} as RedirectRequest);\r\n      } else {\r\n        this.authService.loginRedirect();\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  // unsubscribe to events when component is destroyed\r\n  ngOnDestroy(): void {\r\n    this._destroying$.next(undefined);\r\n    this._destroying$.complete();\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <a class=\"title\" [routerLink]=\"['/']\">{{ title }}</a>\r\n\r\n  <div class=\"toolbar-spacer\"></div>\r\n  <button mat-raised-button *ngIf=\"!loginDisplay\" (click)=\"login()\">Login</button>\r\n  <button mat-raised-button *ngIf=\"loginDisplay\" color=\"warn\" (click)=\"logout()\">Logout</button>\r\n</mat-toolbar>\r\n\r\n<h2 *ngIf=\"isAuthorized\" style=\"text-align: center;\">You are authorized</h2>\r\n<h2 *ngIf=\"!isAuthorized\" style=\"text-align: center;\">You are unauthorized</h2>\r\n\r\n<div class=\"container\">\r\n  <!--This is to avoid reload during acquireTokenSilent() because of hidden iframe -->\r\n  <router-outlet *ngIf=\"!isIframe\"></router-outlet>\r\n</div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { IPublicClientApplication, PublicClientApplication, InteractionType } from '@azure/msal-browser';\r\nimport { MsalGuard, MsalInterceptor, MsalBroadcastService, MsalInterceptorConfiguration, MsalModule, MsalService, MSAL_GUARD_CONFIG, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG, MsalGuardConfiguration, MsalRedirectComponent } from '@azure/msal-angular';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ConsentComponent } from './consent/consent.component';\r\nimport { TodoViewComponent } from './todo-view/todo-view.component';\r\nimport { TodoEditComponent } from './todo-edit/todo-edit.component';\r\nimport { TodoService } from './todo.service';\r\n\r\nimport { msalConfig, loginRequest, protectedResources } from './auth-config';\r\n\r\n/**\r\n * Here we pass the configuration parameters to create an MSAL instance.\r\n * For more info, visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/configuration.md\r\n */\r\n\r\nexport function MSALInstanceFactory(): IPublicClientApplication {\r\n  return new PublicClientApplication(msalConfig);\r\n}\r\n\r\n/**\r\n * MSAL Angular will automatically retrieve tokens for resources \r\n * added to protectedResourceMap. For more info, visit: \r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/initialization.md#get-tokens-for-web-api-calls\r\n */\r\n export function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\r\n  const protectedResourceMap = new Map<string, Array<string>>();\r\n\r\n  protectedResourceMap.set(protectedResources.todoListApi.endpoint, protectedResources.todoListApi.scopes)\r\n    // .set(protectedResources.graphApi.endpoint, protectedResources.graphApi.scopes)\r\n\r\n  return {\r\n    interactionType: InteractionType.Redirect,\r\n    protectedResourceMap\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Set your default interaction type for MSALGuard here. If you have any\r\n * additional scopes you want the user to consent upon login, add them here as well.\r\n */\r\n export function MSALGuardConfigFactory(): MsalGuardConfiguration {\r\n\r\n  return { \r\n    interactionType: InteractionType.Redirect,\r\n    authRequest: loginRequest\r\n  };\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ConsentComponent,\r\n    TodoViewComponent,\r\n    TodoEditComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MatToolbarModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MsalModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: MsalInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory\r\n    },\r\n    {\r\n      provide: MSAL_GUARD_CONFIG,\r\n      useFactory: MSALGuardConfigFactory\r\n    },\r\n    {\r\n      provide: MSAL_INTERCEPTOR_CONFIG,\r\n      useFactory: MSALInterceptorConfigFactory\r\n    },\r\n    MsalService,\r\n    MsalGuard,\r\n    MsalBroadcastService,\r\n    TodoService\r\n  ],\r\n  bootstrap: [AppComponent, MsalRedirectComponent]\r\n})\r\nexport class AppModule { }\r\n","import { TodoService } from './../todo.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Todo } from '../todo';\r\n\r\n@Component({\r\n  selector: 'app-todo-view',\r\n  templateUrl: './todo-view.component.html',\r\n  styleUrls: ['./todo-view.component.css']\r\n})\r\nexport class TodoViewComponent implements OnInit {\r\n  \r\n  todo: Todo = {\r\n    id: 1,\r\n    description: \"\",\r\n    user: \"\",\r\n    status: true,\r\n  }\r\n  \r\n  todos: Todo[] = [];\r\n\r\n  users: string[] = [];\r\n\r\n  displayedColumns = ['status', 'description', 'user', 'edit', 'remove'];\r\n  \r\n  constructor(private service: TodoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTodos();\r\n    this.getUsers();\r\n  }\r\n\r\n  getTodos(): void {\r\n    this.service.getTodos()\r\n      .subscribe((todos: Todo[]) => {\r\n        this.todos = todos;\r\n      });\r\n  }\r\n\r\n  getUsers(): void {\r\n    this.service.getUsers()\r\n    .subscribe((response: any) => {\r\n      this.users = response.value.map((user: any) => user.displayName);\r\n    });\r\n  }\r\n\r\n  addTodo(add: NgForm): void {\r\n    this.service.postTodo(add.value).subscribe(() => {\r\n      this.getTodos();\r\n    })\r\n    add.resetForm();\r\n  }\r\n\r\n  checkTodo(todo: Todo): void {\r\n    this.service.editTodo(todo).subscribe();\r\n  }\r\n\r\n  removeTodo(id: string): void {\r\n    this.service.deleteTodo(+id).subscribe(() => {\r\n      this.getTodos();\r\n    })\r\n  }\r\n\r\n}\r\n","<mat-card class='card-section'>\r\n    <form #add=\"ngForm\" (ngSubmit)=\"addTodo(add)\" >\r\n        <mat-form-field appearance=\"fill\" class=\"form-field\">\r\n            <mat-label>Enter a task</mat-label>\r\n\t\t\t<input matInput type=\"text\" name=\"description\" placeholder=\"task\" class=\"input-field\" [(ngModel)]=\"todo.description\">\r\n\t\t</mat-form-field>\t\t\r\n\r\n\t\t<mat-form-field appearance=\"fill\">\r\n            <mat-label>Assign</mat-label>\r\n            <mat-select name=\"user\" [(ngModel)]=\"todo.user\" >\r\n              <mat-option *ngFor=\"let user of users\" [value]=\"user\">\r\n                {{user}}\r\n              </mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t\t\r\n        <button mat-raised-button id=\"submit-button\" color=\"primary\" type=\"submit\" value=\"submit\">Add</button>\r\n    </form>\r\n</mat-card>\r\n<br>\r\n<hr>\r\n<br>\r\n<div class=\"mat-elevation-z8\">\r\n\t<table mat-table [dataSource]=\"todos\">\r\n  \r\n\t\t<ng-container matColumnDef=\"status\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Status </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"><mat-checkbox [(ngModel)]=\"todo.status\" (change)=\"checkTodo(todo)\" ></mat-checkbox></td>\r\n\t\t</ng-container>\r\n\r\n\t  \t<ng-container matColumnDef=\"description\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Description </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"> {{ todo.description }} </td>\r\n\t\t  </ng-container>\r\n\r\n\t\t  <ng-container matColumnDef=\"user\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Assigned To </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"> {{ todo.user }} </td>\r\n\t\t  </ng-container>\r\n\r\n\t\t<ng-container matColumnDef=\"edit\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Edit </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"><mat-icon class=\"material-icons\" [routerLink]=\"['/todo-edit', todo.id]\">edit</mat-icon></td>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-container matColumnDef=\"remove\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Remove </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"><mat-icon class=\"material-icons\" (click)=\"removeTodo(todo.id)\">delete</mat-icon></td>\r\n\t\t</ng-container>\r\n  \r\n\t  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n\t  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\t</table>\r\n  </div>\r\n","import { Component } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { msalConfig, protectedResources } from '../auth-config';\r\n\r\n@Component({\r\n  selector: 'app-consent',\r\n  templateUrl: './consent.component.html',\r\n  styleUrls: ['./consent.component.css']\r\n})\r\nexport class ConsentComponent {\r\n  \r\n  constructor(private authService: MsalService) { }\r\n\r\n  adminConsent() { \r\n      // if you want to work with multiple accounts, add your account selection logic below\r\n      let account = this.authService.instance.getAllAccounts()[0];\r\n\r\n      if (account) {\r\n        const state = Math.floor(Math.random() * 90000) + 10000; // state parameter for anti token forgery\r\n        \r\n          /**\r\n           * Construct URL for admin consent endpoint. For more info,\r\n           * visit: https://docs.microsoft.com/azure/active-directory/develop/v2-admin-consent\r\n           */\r\n          const adminConsentUri = \"https://login.microsoftonline.com/\" + \r\n          `${account.tenantId}` + \"/v2.0/adminconsent?client_id=\" + \r\n          `${msalConfig.auth.clientId}` + \"&state=\" + `${state}` + \"&redirect_uri=\" + `${window.location.origin}` +\r\n          \"&scope=\" + `${protectedResources.todoListApi.scopes.join(' ')}`;\r\n    \r\n        // redirecting...\r\n        window.location.replace(adminConsentUri);\r\n        \r\n      } else {\r\n        window.alert('Please sign-in first.')\r\n      }\r\n  }\r\n}\r\n","<mat-card class='card-section'>\r\n    <mat-card-title>Provisioning</mat-card-title>\r\n    <mat-card-content>In order to enable users from your tenant to be able to access and use this application, you need to provide consent as an admin.</mat-card-content>\r\n    <mat-card-actions>\r\n        <button mat-raised-button color=\"primary\"(click)=\"adminConsent()\">Consent as Admin</button>\r\n    </mat-card-actions>\r\n    <mat-card-content></mat-card-content>\r\n</mat-card>\r\n","import { TodoService } from './../todo.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Todo } from '../todo';\r\n\r\n@Component({\r\n  selector: 'app-todo-edit',\r\n  templateUrl: './todo-edit.component.html',\r\n  styleUrls: ['./todo-edit.component.css']\r\n})\r\nexport class TodoEditComponent implements OnInit {\r\n\r\n  todo: Todo = {\r\n    id: 1,\r\n    description: \"\",\r\n    user: \"\",\r\n    status: true,\r\n  }\r\n\r\n  users: string[] = [];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private service: TodoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe((params) => {\r\n      let id = +params.get('id')!;\r\n      this.service.getTodo(id).subscribe((response: Todo) => {\r\n        this.todo = response;\r\n      })\r\n    });\r\n\r\n    this.service.getUsers().subscribe((response: any) => {\r\n      this.users = response.value.map((user: any) => user.displayName);\r\n    });\r\n  }\r\n\r\n  editTodo(todo: Todo): void {\r\n    this.todo.description = todo.description;\r\n    this.service.editTodo(this.todo).subscribe(() => {\r\n      this.router.navigate(['/todo-view']);\r\n    })\r\n  }\r\n\r\n}\r\n","<mat-card class='card-section'>\r\n    <div>\r\n        <h1>Edit a task</h1>\r\n        <hr>\r\n        <br>\r\n    </div>\r\n    <form #edit=\"ngForm\" (ngSubmit)=\"editTodo(edit.value)\">\r\n        <mat-form-field appearance=\"fill\" class=\"form-field\">\r\n                <input matInput type=\"text\" name=\"description\" placeholder=\"task\" class=\"input-field\" [(ngModel)]=\"todo.description\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Assign</mat-label>\r\n          <mat-select name=\"user\" [(ngModel)]=\"todo.user\" >\r\n            <mat-option *ngFor=\"let user of users\" [value]=\"user\">\r\n                {{user}}\r\n              </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        \r\n        <button mat-raised-button color=\"primary\" type=\"submit\" value=\"submit\" class=\"submit-button\">Edit</button>\r\n    </form>\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MsalGuard } from '@azure/msal-angular';\r\nimport { ConsentComponent } from './consent/consent.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TodoEditComponent } from './todo-edit/todo-edit.component';\r\nimport { TodoViewComponent } from './todo-view/todo-view.component';\r\n\r\n/**\r\n * MSAL Angular can protect routes in your application\r\n * using MsalGuard. For more info, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/initialization.md#secure-the-routes-in-your-application\r\n */\r\nconst routes: Routes = [\r\n  {\r\n    path: 'todo-edit/:id',\r\n    component: TodoEditComponent,\r\n    canActivate: [\r\n      MsalGuard\r\n    ]\r\n  },\r\n  {\r\n    path: 'todo-view',\r\n    component: TodoViewComponent,\r\n    canActivate: [\r\n      MsalGuard\r\n    ]\r\n  },\r\n  {\r\n    path: 'consent',\r\n    component: ConsentComponent,\r\n  },\r\n  {\r\n    // Needed for hash routing\r\n    path: 'error',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    // Needed for hash routing\r\n    path: 'state',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    // Needed for hash routing\r\n    path: 'code',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\nconst isIframe = window !== window.parent && !window.opener;\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    useHash: true,\r\n    // Don't perform initial navigation in iframes\r\n    initialNavigation: !isIframe ? 'enabled' : 'disabled'\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Todo } from './todo';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { protectedResources } from './auth-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoService {\r\n  apiUri = protectedResources.todoListApi.endpoint;\r\n  todoListUrl = protectedResources.todoListApi.endpoint + '/todolist';\r\n  graphUri = protectedResources.graphApi.endpoint;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers() {\r\n    return this.http.get<string[]>(this.graphUri);\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return this.http.get<string[]>(this.apiUri + '/me');\r\n  }\r\n\r\n  getTodos() { \r\n    return this.http.get<Todo[]>(this.todoListUrl);\r\n  }\r\n\r\n  getTodo(id: number) { \r\n    return this.http.get<Todo>(this.todoListUrl + '/' + id);\r\n  }\r\n  \r\n  postTodo(todo: Todo) { \r\n    return this.http.post<Todo>(this.todoListUrl, todo);\r\n  }\r\n\r\n  deleteTodo(id: number) {\r\n    return this.http.delete(this.todoListUrl + '/' + id);\r\n  }\r\n\r\n  editTodo(todo: Todo) { \r\n    return this.http.put<Todo>(this.todoListUrl + '/' + todo.id, todo);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}